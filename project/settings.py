"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import django_heroku

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SECRET_KEY = '@ee+on-58xp_iy4$^a#ten)6+@1j+p1a#!e!_)4&aimop3nq8t'


ALLOWED_HOSTS = []

APPEND_SLASH=False 
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'jwt_auth',
    'properties',
    'market_data',
    'orders',
    'portfolio',
    'comments',
    'advice',
    'rentalmanager',
    'leaderboard',
    'news',
    'django_crontab'
]

#  RUN THE TIMED FUNCTIONS TO UPDATE DATABASE WITH LIVE PROPERTY DATA.
#  NOTE: FOR DEVELOPMENT TESTING ONLY - HEROKU SCHEDULER HANDLES THE LIVE SITE UPDATES
CRONJOBS = [
    # ('0 3 */2 * *', 'market_data.cron_functions.update_growth_data'),
    # ('0 3 */2 * *', 'market_data.cron_functions.update_value_rent_data'),
    ('* * * * *', 'market_data.cron_functions.update_value_rent_data_artificial')
]

REST_FRAMEWORK = {
'DEFAULT_AUTHENTICATION_CLASSES': (
    'rest_framework.authentication.SessionAuthentication',
),
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'frontend'),
                 os.path.join(BASE_DIR, 'templates')
                 ]  
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database

DATABASES = {
     'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'property-investor',
        'HOST': 'localhost',
        'PORT': 5432
    }
}


# Password validation

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)

REST_FRAMEWORK = { 
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'jwt_auth.authentication.JWTAuthentication'
    ],
}

AUTH_USER_MODEL = 'jwt_auth.User'

# Static files (CSS, JavaScript, Images)

ROOT_URLCONF = 'project.urls' 

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'frontend', "build", "static"), 
)

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

django_heroku.settings(locals())